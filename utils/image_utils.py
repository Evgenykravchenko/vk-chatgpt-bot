"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ VK
"""
import os
import logging
from typing import Optional

logger = logging.getLogger(__name__)


class VKImageUploader:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ VK —Å–µ—Ä–≤–µ—Ä"""

    def __init__(self, vk_api_instance, upload_instance):
        self.vk = vk_api_instance
        self.upload = upload_instance
        self._cached_images = {}  # –ö—ç—à –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

    def upload_photo_for_message(self, image_path: str) -> Optional[str]:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ –Ω–∞ VK —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏

        Args:
            image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

        Returns:
            Attachment —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
            if image_path in self._cached_images:
                logger.info(f"üì∑ –ò—Å–ø–æ–ª—å–∑—É—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
                return self._cached_images[image_path]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not os.path.exists(image_path):
                logger.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
                return None

            logger.info(f"üì§ –ó–∞–≥—Ä—É–∂–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ VK —Å–µ—Ä–≤–µ—Ä
            photo = self.upload.photo_messages(image_path)[0]

            # –§–æ—Ä–º–∏—Ä—É–µ–º attachment —Å—Ç—Ä–æ–∫—É
            owner_id = photo['owner_id']
            photo_id = photo['id']
            access_key = photo.get('access_key', '')

            if access_key:
                attachment = f"photo{owner_id}_{photo_id}_{access_key}"
            else:
                attachment = f"photo{owner_id}_{photo_id}"

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            self._cached_images[image_path] = attachment

            logger.info(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {attachment}")
            return attachment

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {image_path}: {e}")
            return None

    def get_welcome_image(self) -> Optional[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å attachment –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        Returns:
            Attachment —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ None
        """
        welcome_path = os.path.join("resources", "welcome.png")
        return self.upload_photo_for_message(welcome_path)

    def clear_cache(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
        self._cached_images.clear()
        logger.info("üóëÔ∏è –ö—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—á–∏—â–µ–Ω")


def ensure_resources_directory():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É resources –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç"""
    resources_dir = "resources"
    if not os.path.exists(resources_dir):
        os.makedirs(resources_dir)
        logger.info(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {resources_dir}")

        # –°–æ–∑–¥–∞–µ–º README —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        readme_path = os.path.join(resources_dir, "README.md")
        with open(readme_path, 'w', encoding='utf-8') as f:
            f.write("""# –†–µ—Å—É—Ä—Å—ã –±–æ—Ç–∞

## –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

### welcome.png
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ "–ù–∞—á–∞—Ç—å".

**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
- –§–æ—Ä–º–∞—Ç: PNG, JPG, JPEG
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50 –ú–ë
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1200x800 –∏–ª–∏ –º–µ–Ω—å—à–µ
- –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω: 3:2 –∏–ª–∏ 16:9

### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

1. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É `resources/`
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `VKImageUploader` –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
3. –î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

```python
# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploader = VKImageUploader(vk_api, upload)
attachment = uploader.upload_photo_for_message("resources/my_image.png")

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
vk.messages.send(
    user_id=user_id,
    message="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
    attachment=attachment,
    random_id=get_random_id()
)
```
""")
        logger.info(f"üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {readme_path}")

    return resources_dir

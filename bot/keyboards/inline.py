"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è VK –±–æ—Ç–∞
"""
import json
from typing import Dict, Any


class VKKeyboard:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä VK"""

    def __init__(self, one_time: bool = False, inline: bool = False):
        self.keyboard = {
            "one_time": one_time,
            "inline": inline,
            "buttons": []
        }
        self.current_row = []

    def add_button(self, text: str, color: str = "secondary", payload: Dict[str, Any] = None) -> "VKKeyboard":
        """
        –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –≤ —Ç–µ–∫—É—â–∏–π —Ä—è–¥

        Args:
            text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            color: –¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ (primary, secondary, negative, positive)
            payload: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
        button = {
            "action": {
                "type": "text",
                "label": text,
                "payload": json.dumps(payload or {})
            },
            "color": color
        }
        self.current_row.append(button)
        return self

    def add_row(self) -> "VKKeyboard":
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫"""
        if self.current_row:
            self.keyboard["buttons"].append(self.current_row)
            self.current_row = []
        return self

    def get_keyboard(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å JSON –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        if self.current_row:
            self.keyboard["buttons"].append(self.current_row)
            self.current_row = []
        return json.dumps(self.keyboard, ensure_ascii=False)


def get_main_keyboard() -> str:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üí¨ –°–ø—Ä–æ—Å–∏—Ç—å AI", "primary", {"command": "ask"})
    keyboard.add_button("üìä –°—Ç–∞—Ç—É—Å", "secondary", {"command": "status"})
    keyboard.add_row()

    keyboard.add_button("üóëÔ∏è –°–±—Ä–æ—Å", "negative", {"command": "reset"})
    keyboard.add_button("‚ùì –ü–æ–º–æ—â—å", "secondary", {"command": "help"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_help_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–æ—â–∏"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üìã –ö–æ–º–∞–Ω–¥—ã", "secondary", {"command": "commands"})
    keyboard.add_button("‚ÑπÔ∏è –û –±–æ—Ç–µ", "secondary", {"command": "about"})
    keyboard.add_row()

    keyboard.add_button("üè† –ì–ª–∞–≤–Ω–∞—è", "primary", {"command": "main"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_status_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", "secondary", {"command": "status"})
    keyboard.add_button("üóëÔ∏è –°–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞", "negative", {"command": "reset"})
    keyboard.add_row()

    keyboard.add_button("üè† –ì–ª–∞–≤–Ω–∞—è", "primary", {"command": "main"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_admin_keyboard() -> str:
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "secondary", {"command": "users"})
    keyboard.add_button("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "secondary", {"command": "settings"})
    keyboard.add_row()

    keyboard.add_button("üîê –î–æ—Å—Ç—É–ø", "secondary", {"command": "access_control"})
    keyboard.add_button("üë§ –£–ø—Ä. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "secondary", {"command": "manage_user"})
    keyboard.add_row()

    keyboard.add_button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã", "negative", {"command": "reset_all_limits_confirm"})
    keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "secondary", {"command": "stats"})
    keyboard.add_row()

    keyboard.add_button("üè† –ì–ª–∞–≤–Ω–∞—è", "primary", {"command": "main"})
    keyboard.add_row()

    return keyboard.get_keyboard()

def get_user_management_keyboard(user_id: int) -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üéØ –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç", "primary", {"command": "user_set_limit", "target_user_id": user_id})
    keyboard.add_button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ª–∏–º–∏—Ç", "negative", {"command": "user_reset_limit", "target_user_id": user_id})
    keyboard.add_row()

    keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "secondary", {"command": "user_show_stats", "target_user_id": user_id})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "secondary", {"command": "admin"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_access_control_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üéØ –†–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–∞", "secondary", {"command": "access_mode"})
    keyboard.add_button("üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫", "secondary", {"command": "whitelist"})
    keyboard.add_row()

    keyboard.add_button("üö´ –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", "negative", {"command": "blacklist"})
    keyboard.add_button("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "secondary", {"command": "access_stats"})
    keyboard.add_row()

    keyboard.add_button("üí¨ –°–æ–æ–±—â–µ–Ω–∏—è", "secondary", {"command": "access_messages"})
    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "admin"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_access_messages_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–∞"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üìã –ë–µ—Ç–∞-—Ç–µ—Å—Ç", "secondary", {"command": "edit_whitelist_msg"})
    keyboard.add_button("üîß –¢–µ—Ö. —Ä–∞–±–æ—Ç—ã", "secondary", {"command": "edit_admin_msg"})
    keyboard.add_row()

    keyboard.add_button("üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞", "negative", {"command": "edit_blocked_msg"})
    keyboard.add_button("üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä", "secondary", {"command": "view_messages"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "access_control"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_access_mode_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –¥–æ—Å—Ç—É–ø–∞"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üåê –û—Ç–∫—Ä—ã—Ç—ã–π", "positive", {"command": "set_mode_public"})
    keyboard.add_row()

    keyboard.add_button("üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫", "secondary", {"command": "set_mode_whitelist"})
    keyboard.add_row()

    keyboard.add_button("üë§ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω", "negative", {"command": "set_mode_admin"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "access_control"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_whitelist_management_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å", "positive", {"command": "whitelist_add"})
    keyboard.add_button("‚ûñ –£–¥–∞–ª–∏—Ç—å", "negative", {"command": "whitelist_remove"})
    keyboard.add_row()

    keyboard.add_button("üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫", "secondary", {"command": "whitelist_show"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "access_control"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_cancel_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –æ—Ç–º–µ–Ω–æ–π"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": "whitelist"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_settings_management_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("ü§ñ –û—Å–Ω–æ–≤–Ω—ã–µ", "secondary", {"command": "settings_basic"})
    keyboard.add_button("‚ö° –°–∏—Å—Ç–µ–º–∞", "secondary", {"command": "settings_system"})
    keyboard.add_row()

    keyboard.add_button("üîÑ –°–±—Ä–æ—Å", "negative", {"command": "settings_reset"})
    keyboard.add_button("üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä", "secondary", {"command": "settings_view"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "admin"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_basic_settings_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üí≠ –ö–æ–Ω—Ç–µ–∫—Å—Ç", "secondary", {"command": "edit_context_size"})
    keyboard.add_button("üéØ –õ–∏–º–∏—Ç—ã", "secondary", {"command": "edit_default_limit"})
    keyboard.add_row()

    keyboard.add_button("üß† –ú–æ–¥–µ–ª—å AI", "secondary", {"command": "edit_ai_model"})
    keyboard.add_button("üí¨ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "secondary", {"command": "edit_welcome"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "settings_menu"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_system_settings_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚è±Ô∏è Rate Limit", "secondary", {"command": "toggle_rate_limit"})
    keyboard.add_button("üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "secondary", {"command": "toggle_maintenance"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "settings_menu"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_ai_model_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ AI –º–æ–¥–µ–ª–∏"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üöÄ GPT-4", "secondary", {"command": "set_model_gpt4"})
    keyboard.add_button("‚ö° GPT-3.5", "secondary", {"command": "set_model_gpt35"})
    keyboard.add_row()

    keyboard.add_button("üß™ GPT-4-turbo", "secondary", {"command": "set_model_gpt4_turbo"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "settings_basic"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_confirmation_keyboard(action: str) -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    keyboard = VKKeyboard(one_time=True)

    keyboard.add_button("‚úÖ –î–∞", "positive", {"command": f"confirm_{action}"})
    keyboard.add_button("‚ùå –ù–µ—Ç", "negative", {"command": "cancel"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def remove_keyboard() -> str:
    """–£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    keyboard = {
        "buttons": [],
        "one_time": True
    }
    return json.dumps(keyboard, ensure_ascii=False)


# –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ bot/keyboards/inline.py:

def get_input_cancel_keyboard(return_command: str = "admin") -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": return_command})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_settings_input_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –æ—Ç–º–µ–Ω–æ–π"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "secondary", {"command": "settings_basic"})
    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": "admin"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_whitelist_input_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ —Å –æ—Ç–º–µ–Ω–æ–π"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "secondary", {"command": "whitelist"})
    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": "access_control"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_user_input_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ—Ç–º–µ–Ω–æ–π"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "secondary", {"command": "admin"})
    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": "admin"})
    keyboard.add_row()

    return keyboard.get_keyboard()





def get_rate_limit_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Rate Limiting"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("üî¢ –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç", "secondary", {"command": "edit_rate_limit_calls"})
    keyboard.add_button("‚è±Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥", "secondary", {"command": "edit_rate_limit_period"})
    keyboard.add_row()

    keyboard.add_button("üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "secondary", {"command": "show_rate_limit_info"})
    keyboard.add_row()

    keyboard.add_button("üîÑ –í–∫–ª—é—á–∏—Ç—å/–û—Ç–∫–ª—é—á–∏—Ç—å", "secondary", {"command": "toggle_rate_limit"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "settings_system"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_system_settings_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è)"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚è±Ô∏è Rate Limiting", "secondary", {"command": "rate_limit_menu"})
    keyboard.add_button("üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "secondary", {"command": "toggle_maintenance"})
    keyboard.add_row()

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "primary", {"command": "settings_menu"})
    keyboard.add_row()

    return keyboard.get_keyboard()


def get_rate_limit_input_keyboard() -> str:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ rate limiting"""
    keyboard = VKKeyboard(one_time=False)

    keyboard.add_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "secondary", {"command": "rate_limit_menu"})
    keyboard.add_button("‚ùå –û—Ç–º–µ–Ω–∞", "negative", {"command": "settings_system"})
    keyboard.add_row()

    return keyboard.get_keyboard()
